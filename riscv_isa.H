/******************************************************
 * Instruction Set Architecture header file.          *
 * This file is automatically generated by ArchC      *
 * WITHOUT WARRANTY OF ANY KIND, either express       *
 * or implied.                                        *
 * For more information on ArchC, please visit:       *
 * http://www.archc.org                               *
 *                                                    *
 * The ArchC Team                                     *
 * Computer Systems Laboratory (LSC)                  *
 * IC-UNICAMP                                         *
 * http://www.lsc.ic.unicamp.br                       *
 ******************************************************/
 

#ifndef _RISCV_ISA_H
#define _RISCV_ISA_H

#include "riscv_parms.H"
#include "ac_instr.H"
#include "ac_decoder_rt.H"
#include "ac_instr_info.H"
#include "riscv_arch_ref.H"
#include "riscv_syscall.H"

namespace riscv_parms
{
class riscv_isa: public riscv_arch_ref {
private:
typedef ac_instr<AC_DEC_FIELD_NUMBER> ac_instr_t;

public:
  static ac_dec_field fields[AC_DEC_FIELD_NUMBER];
  static ac_dec_format formats[AC_DEC_FORMAT_NUMBER];
  static ac_dec_list dec_list[AC_DEC_LIST_NUMBER];
  static ac_dec_instr instructions[AC_DEC_INSTR_NUMBER];
  static const ac_instr_info instr_table[AC_DEC_INSTR_NUMBER + 1];

  static const unsigned instr_format_table[AC_DEC_INSTR_NUMBER + 1];

  ac_decoder_full* decoder;

  riscv_syscall syscall;
  int cur_instr_id;


    #include "riscv_isa_helper.H"
  
  //!Constructor.
  riscv_isa(riscv_arch& ref) : riscv_arch_ref(ref) , syscall(ref) {
    //!Building Decoder.
    decoder = ac_decoder_full::CreateDecoder(riscv_isa::formats, riscv_isa::instructions, &ref);
  }

  inline const char* get_name() { return instr_table[cur_instr_id].ac_instr_name; }
  inline const char* get_mnemonic() { return instr_table[cur_instr_id].ac_instr_mnemonic; }
  inline unsigned get_size() { return instr_table[cur_instr_id].ac_instr_size; };
  inline unsigned get_cycles() { return instr_table[cur_instr_id].ac_instr_cycles; };
  inline unsigned get_min_latency() { return instr_table[cur_instr_id].ac_instr_min_latency; };
  inline unsigned get_max_latency() { return instr_table[cur_instr_id].ac_instr_max_latency; };

  inline __attribute__((always_inline)) void _behavior_instruction(uint8_t op);

  inline __attribute__((always_inline)) void _behavior_begin();
  inline __attribute__((always_inline)) void _behavior_end();

  inline __attribute__((always_inline)) void _behavior_riscv_Type_R(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void _behavior_riscv_Type_R4(uint8_t rs3, uint8_t funct2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void _behavior_riscv_Type_I(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void _behavior_riscv_Type_S(uint8_t imm4, uint8_t imm3, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm2, uint8_t imm1, uint8_t op);
  inline __attribute__((always_inline)) void _behavior_riscv_Type_SB(uint8_t imm4, uint8_t imm2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm1, uint8_t imm3, uint8_t op);
  inline __attribute__((always_inline)) void _behavior_riscv_Type_U(uint32_t imm, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void _behavior_riscv_Type_UJ(uint8_t imm4, uint16_t imm1, uint8_t imm2, uint8_t imm3, uint8_t rd, uint8_t op);

  inline __attribute__((always_inline)) void behavior_ADD(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SUB(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SLL(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SLT(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SLTU(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_XOR(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SRL(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SRA(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_OR(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_AND(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_LB(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_LH(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_LW(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_LBU(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_LHU(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_ADDI(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SLTI(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SLTIU(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_XORI(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_ORI(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_ANDI(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_JALR(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SLLI(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SRLI(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SRAI(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SCALL(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SBREAK(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_RDCYCLE(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_RDCYCLEH(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_RDTIME(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_RDTIMEH(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_RDINSTRET(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_RDINSTRETH(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FENCE(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FENCE_I(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_CSRRS(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_CSRRW(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_CSRRC(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SB(uint8_t imm4, uint8_t imm3, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm2, uint8_t imm1, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SH(uint8_t imm4, uint8_t imm3, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm2, uint8_t imm1, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SW(uint8_t imm4, uint8_t imm3, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm2, uint8_t imm1, uint8_t op);
  inline __attribute__((always_inline)) void behavior_BEQ(uint8_t imm4, uint8_t imm2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm1, uint8_t imm3, uint8_t op);
  inline __attribute__((always_inline)) void behavior_BNE(uint8_t imm4, uint8_t imm2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm1, uint8_t imm3, uint8_t op);
  inline __attribute__((always_inline)) void behavior_BLT(uint8_t imm4, uint8_t imm2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm1, uint8_t imm3, uint8_t op);
  inline __attribute__((always_inline)) void behavior_BGE(uint8_t imm4, uint8_t imm2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm1, uint8_t imm3, uint8_t op);
  inline __attribute__((always_inline)) void behavior_BLTU(uint8_t imm4, uint8_t imm2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm1, uint8_t imm3, uint8_t op);
  inline __attribute__((always_inline)) void behavior_BGEU(uint8_t imm4, uint8_t imm2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm1, uint8_t imm3, uint8_t op);
  inline __attribute__((always_inline)) void behavior_LUI(uint32_t imm, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_AUIPC(uint32_t imm, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_JAL(uint8_t imm4, uint16_t imm1, uint8_t imm2, uint8_t imm3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_MUL(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_MULH(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_MULHSU(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_MULHU(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_DIV(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_DIVU(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_REM(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_REMU(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_LR_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_SC_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_AMOSWAP_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_AMOADD_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_AMOXOR_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_AMOAND_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_AMOOR_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_AMOMIN_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_AMOMAX_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_AMOMINU_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_AMOMAXU_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FLW(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSW(uint8_t imm4, uint8_t imm3, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm2, uint8_t imm1, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FADD_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSUB_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMUL_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FDIV_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMIN_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMAX_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSQRT_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMADD_S(uint8_t rs3, uint8_t funct2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMSUB_S(uint8_t rs3, uint8_t funct2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FNMSUB_S(uint8_t rs3, uint8_t funct2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FNMADD_S(uint8_t rs3, uint8_t funct2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FCVT_W_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FCVT_WU_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FCVT_S_WU(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FCVT_S_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSGNJN_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSGNJ_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSGNJX_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMV_X_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMV_S_X(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FEQ_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FLT_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FLE_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMV_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FLD(uint8_t imm4, uint8_t imm3, uint8_t imm2, uint8_t imm1, uint8_t imm8, uint8_t imm7, uint8_t imm6, uint16_t csr, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSD(uint8_t imm4, uint8_t imm3, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t imm2, uint8_t imm1, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FADD_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSUB_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMUL_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FDIV_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMIN_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMAX_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSQRT_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMADD_D(uint8_t rs3, uint8_t funct2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMSUB_D(uint8_t rs3, uint8_t funct2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FNMSUB_D(uint8_t rs3, uint8_t funct2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FNMADD_D(uint8_t rs3, uint8_t funct2, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FCVT_S_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FCVT_D_S(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FCVT_W_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FCVT_WU_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FCVT_D_W(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FCVT_D_WU(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSGNJ_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSGNJN_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FSGNJX_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FMV_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FEQ_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FLT_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);
  inline __attribute__((always_inline)) void behavior_FLE_D(uint8_t funct7, uint8_t funct5, uint8_t aq, uint8_t rl, uint8_t rs2, uint8_t rs1, uint8_t funct3, uint8_t rd, uint8_t op);

};
};



#endif //_RISCV_ISA_H

